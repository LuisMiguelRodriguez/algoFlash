{"numFailedTestSuites":2,"numFailedTests":4,"numPassedTestSuites":0,"numPassedTests":2,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":1,"numTotalTestSuites":2,"numTotalTests":6,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1545010400449,"success":false,"testResults":[{"console":[],"failureMessage":"  ● Bean Counting Tests › countB(\"BomBastic\"\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 2\n    Received: undefined\n\n    Difference:\n\n      Comparing two different types of values. Expected number but received undefined.\n\n       8 | \n       9 |   test('countB(\"BomBastic\"', () => {\n    > 10 |     expect(countB('BomBastic')).toBe(2);\n         |                                 ^\n      11 |   });\n      12 | \n      13 |   test('countChar function is defined', () => {\n\n      at Object.toBe (server/tests/beanCounting/test.js:10:33)\n\n  ● Bean Counting Tests › countChar(\"BomBastic\")\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 2\n    Received: undefined\n\n    Difference:\n\n      Comparing two different types of values. Expected number but received undefined.\n\n      16 | \n      17 |   test('countChar(\"BomBastic\")', () => {\n    > 18 |     expect(countChar('BomBastic', 'B')).toBe(2);\n         |                                         ^\n      19 |   });\n      20 | \n      21 |   test('countChar(\"testing testing\",\"t\")', () => {\n\n      at Object.toBe (server/tests/beanCounting/test.js:18:41)\n\n  ● Bean Counting Tests › countChar(\"testing testing\",\"t\")\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 4\n    Received: undefined\n\n    Difference:\n\n      Comparing two different types of values. Expected number but received undefined.\n\n      20 | \n      21 |   test('countChar(\"testing testing\",\"t\")', () => {\n    > 22 |     expect(countChar('testing testing', 't')).toBe(4);\n         |                                               ^\n      23 |   })\n      24 | \n      25 |   test('countChar(\"testing testing\", \"h\")', () => {\n\n      at Object.toBe (server/tests/beanCounting/test.js:22:47)\n\n  ● Bean Counting Tests › countChar(\"testing testing\", \"h\")\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 0\n    Received: undefined\n\n    Difference:\n\n      Comparing two different types of values. Expected number but received undefined.\n\n      24 | \n      25 |   test('countChar(\"testing testing\", \"h\")', () => {\n    > 26 |     expect(countChar('testing testing', 'h')).toBe(0);\n         |                                               ^\n      27 |   })\n      28 | \n      29 | });\n\n      at Object.toBe (server/tests/beanCounting/test.js:26:47)\n","numFailingTests":4,"numPassingTests":2,"numPendingTests":0,"perfStats":{"end":1545010400711,"start":1545010400467},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/home/luisthecoder/Desktop/Dev/algoFlash/server/tests/beanCounting/test.js","testResults":[{"ancestorTitles":["Bean Counting Tests"],"duration":3,"failureMessages":[],"fullName":"Bean Counting Tests countB function is defined","location":null,"numPassingAsserts":0,"status":"passed","title":"countB function is defined"},{"ancestorTitles":["Bean Counting Tests"],"duration":6,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 2\nReceived: undefined\n\nDifference:\n\n  Comparing two different types of values. Expected number but received undefined.\n    at Object.toBe (/home/luisthecoder/Desktop/Dev/algoFlash/server/tests/beanCounting/test.js:10:33)\n    at Object.asyncJestTest (/home/luisthecoder/Desktop/Dev/algoFlash/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/home/luisthecoder/Desktop/Dev/algoFlash/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/luisthecoder/Desktop/Dev/algoFlash/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/luisthecoder/Desktop/Dev/algoFlash/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"Bean Counting Tests countB(\"BomBastic\"","location":null,"numPassingAsserts":0,"status":"failed","title":"countB(\"BomBastic\""},{"ancestorTitles":["Bean Counting Tests"],"duration":0,"failureMessages":[],"fullName":"Bean Counting Tests countChar function is defined","location":null,"numPassingAsserts":0,"status":"passed","title":"countChar function is defined"},{"ancestorTitles":["Bean Counting Tests"],"duration":1,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 2\nReceived: undefined\n\nDifference:\n\n  Comparing two different types of values. Expected number but received undefined.\n    at Object.toBe (/home/luisthecoder/Desktop/Dev/algoFlash/server/tests/beanCounting/test.js:18:41)\n    at Object.asyncJestTest (/home/luisthecoder/Desktop/Dev/algoFlash/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/home/luisthecoder/Desktop/Dev/algoFlash/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/luisthecoder/Desktop/Dev/algoFlash/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/luisthecoder/Desktop/Dev/algoFlash/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"Bean Counting Tests countChar(\"BomBastic\")","location":null,"numPassingAsserts":0,"status":"failed","title":"countChar(\"BomBastic\")"},{"ancestorTitles":["Bean Counting Tests"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 4\nReceived: undefined\n\nDifference:\n\n  Comparing two different types of values. Expected number but received undefined.\n    at Object.toBe (/home/luisthecoder/Desktop/Dev/algoFlash/server/tests/beanCounting/test.js:22:47)\n    at Object.asyncJestTest (/home/luisthecoder/Desktop/Dev/algoFlash/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/home/luisthecoder/Desktop/Dev/algoFlash/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/luisthecoder/Desktop/Dev/algoFlash/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/luisthecoder/Desktop/Dev/algoFlash/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"Bean Counting Tests countChar(\"testing testing\",\"t\")","location":null,"numPassingAsserts":0,"status":"failed","title":"countChar(\"testing testing\",\"t\")"},{"ancestorTitles":["Bean Counting Tests"],"duration":0,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 0\nReceived: undefined\n\nDifference:\n\n  Comparing two different types of values. Expected number but received undefined.\n    at Object.toBe (/home/luisthecoder/Desktop/Dev/algoFlash/server/tests/beanCounting/test.js:26:47)\n    at Object.asyncJestTest (/home/luisthecoder/Desktop/Dev/algoFlash/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/home/luisthecoder/Desktop/Dev/algoFlash/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/home/luisthecoder/Desktop/Dev/algoFlash/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/home/luisthecoder/Desktop/Dev/algoFlash/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:189:7)"],"fullName":"Bean Counting Tests countChar(\"testing testing\", \"h\")","location":null,"numPassingAsserts":0,"status":"failed","title":"countChar(\"testing testing\", \"h\")"}],"sourceMaps":{},"skipped":false,"leaks":false},{"console":null,"displayName":"","failureMessage":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/en/configuration.html\n\n    Details:\n\n    SyntaxError: /home/luisthecoder/Desktop/Dev/algoFlash/src/App.test.js: Unexpected token (7:18)\n\n       5 | it('renders without crashing', () => {\n       6 |   const div = document.createElement('div');\n    >  7 |   ReactDOM.render(<App />, div);\n         |                   ^\n       8 |   ReactDOM.unmountComponentAtNode(div);\n       9 | });\n      10 | \n\n      at Parser.raise (node_modules/@babel/parser/lib/index.js:4028:15)\n      at Parser.unexpected (node_modules/@babel/parser/lib/index.js:5359:16)\n      at Parser.parseExprAtom (node_modules/@babel/parser/lib/index.js:6518:20)\n      at Parser.parseExprSubscripts (node_modules/@babel/parser/lib/index.js:6081:21)\n      at Parser.parseMaybeUnary (node_modules/@babel/parser/lib/index.js:6060:21)\n      at Parser.parseExprOps (node_modules/@babel/parser/lib/index.js:5945:21)\n      at Parser.parseMaybeConditional (node_modules/@babel/parser/lib/index.js:5917:21)\n      at Parser.parseMaybeAssign (node_modules/@babel/parser/lib/index.js:5864:21)\n      at Parser.parseExprListItem (node_modules/@babel/parser/lib/index.js:7199:18)\n      at Parser.parseCallExpressionArguments (node_modules/@babel/parser/lib/index.js:6289:22)\n","leaks":false,"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"openHandles":[],"perfStats":{"end":0,"start":0},"skipped":false,"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"uncheckedKeys":[],"unmatched":0,"updated":0},"sourceMaps":{},"testExecError":{"pos":189,"loc":{"line":7,"column":18},"code":"BABEL_PARSE_ERROR"},"testFilePath":"/home/luisthecoder/Desktop/Dev/algoFlash/src/App.test.js","testResults":[]}],"wasInterrupted":false}